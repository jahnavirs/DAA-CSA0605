Edge Cases


1. Empty List


- Input: []
- Output: []
- Explanation: The function returns an empty list without any errors.


2. List with One Element


- Input: [5]
- Output: [5]
- Explanation: The function returns the same list since it's already sorted.


3. List with All Identical Elements


- Input: [5, 5, 5, 5]
- Output: [5, 5, 5, 5]
- Explanation: The function returns the same list since all elements are equal
4. List with Negative Numbers


- Input: [-3, 5, 1, -1]
- Output: [-3, -1, 1, 5]
- Explanation: The function correctly sorts the list, handling negative numbers.


Code



def bubble_sort(arr):
    n = len(arr)
    
    for i in range(n):
        # Create a flag that will allow the function to terminate early if there's nothing left to sort
        swapped = False
        
        # Start looking at each item of the list one by one, comparing it with its adjacent value
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                # Swap values
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                # Set the flag to True so we'll loop again
                swapped = True
      # If no two elements were swapped in inner loop, the list is sorted
        if not swapped:
            break
    
    return arr


# Test cases
print(bubble_sort([]))  # []
print(bubble_sort([5]))  # [5]
print(bubble_sort([5, 5, 5, 5]))  # [5, 5, 5, 5]
print(bubble_sort([-3, 5, 1, -1]))  # [-3, -1, 1, 5]
