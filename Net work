

import heapq

def networkDelayTime(times, n, k):
    graph = [[] for _ in range(n + 1)]
    for u, v, w in times:
        graph[u].append((v, w))

    pq = [(0, k)]  # (time, node)
    visited = set()
    max_time = 0

    while pq:
        time, node = heapq.heappop(pq)
        if node not in visited:
            visited.add(node)
            max_time = max(max_time, time)
            for neighbor, neighbor_time in graph[node]:
                if neighbor not in visited:
                    heapq.heappush(pq, (time + neighbor_time, neighbor))

    return max_time if len(visited) == n else -1
